---
import '../styles/global.css';

interface Props {
	title?: string | undefined;
	description?: string | undefined;
}

const {
	title = 'Karim DAHMANI | Portfolio',
	description = "Karim DAHMANI's portfolio, a software engineer based in Cergy, France. I am passionate about web technologies and I love to create beautiful and performant websites."
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="keywords" content={description} />
<meta name="description" property="og:description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />

<!-- Permissions Policy -->
<meta http-equiv="Permissions-Policy" content="interest-cohort=()" />

<!-- Open Graph -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content="https://dahmani-karim.github.io" />
<meta property="og:image" content="https://raw.githubusercontent.com/dahmani-karim/dahmani-karim.github.io/main/public/assets/portrait.webp" />

<!-- Twitter Card -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content="https://raw.githubusercontent.com/dahmani-karim/dahmani-karim.github.io/main/public/assets/portrait.webp" />
<!-- <meta name="twitter:site" content="@your-twitter-handle" /> -->

<title>{title}</title>

<link rel="canonical" href="https://dahmani-karim.github.io" />
<link rel="icon" type="image/svg+xml" href="/faviconDev.svg" />
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap" rel="stylesheet" media="all"/>
<link rel="preload" href="/faviconDev.svg" as="image" />
<link rel="preload" href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap" as="style" onload="this.rel='stylesheet'" />
<noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"></noscript>

<script is:inline>
	// This code is inlined in the head to make dark mode instant & blocking.
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('theme-dark');

	if (typeof localStorage !== 'undefined') {
		// Watch the document element and persist user preference when it changes.
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('theme-dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
<script>
	if (!('onload' in document.createElement('link'))) {
		var links = document.getElementsByTagName('link');
		for (var i = 0; i < links.length; i++) {
			var link = links[i];
			if (link.rel === 'preload' && link.as === 'style' && !link.onload) {
		  		link.onload = function() {
				(this as HTMLLinkElement).rel = 'stylesheet';
		  	};
		}
	}
}
</script>